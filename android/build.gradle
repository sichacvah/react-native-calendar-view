buildscript {
  repositories {
    google()
    jcenter()
  }

  dependencies {
    //noinspection GradleDependency
    classpath 'com.android.tools.build:gradle:3.2.1'
  }
}

def getExtOrInitialValue(name, initialValue) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : initialValue
}

def getExtOrDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties['ReactNativeNetInfo_' + name]
}

def getExtOrIntegerDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties['ReactNativeNetInfo_' + name]).toInteger()
}

apply plugin: 'com.android.library'

android {
  compileSdkVersion getExtOrIntegerDefault('compileSdkVersion')
  buildToolsVersion getExtOrDefault('buildToolsVersion')

  defaultConfig {
    minSdkVersion getExtOrIntegerDefault('minSdkVersion')
    targetSdkVersion getExtOrIntegerDefault('targetSdkVersion')
  }
  lintOptions{
    abortOnError false
  }
}

repositories {
  maven {
    // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
    url "$rootDir/../node_modules/react-native/android"
  }
  google()
  jcenter()
  mavenCentral()
}

dependencies {
  //noinspection GradleDynamicVersion
  implementation 'com.facebook.react:react-native:+'
  implementation 'com.jakewharton.threetenabp:threetenabp:1.2.1'
  implementation 'com.android.support:recyclerview-v7:28.0.0'

  def supportLibVersion = getExtOrInitialValue('supportLibVersion', getExtOrInitialValue('supportVersion', null))
  def androidXVersion = getExtOrInitialValue('androidXVersion', null)
  if (supportLibVersion && androidXVersion == null) {
    implementation "com.android.support:appcompat-v7:$supportLibVersion"
  } else {
    def defaultAndroidXVersion = "1.+"
    if (androidXVersion == null) {
      androidXVersion = defaultAndroidXVersion
    }
    def androidXCore = getExtOrInitialValue('androidXCore', androidXVersion)
    implementation "androidx.core:core:$androidXCore"
  }
}